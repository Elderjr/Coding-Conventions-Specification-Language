package ccslFaultTypeDescriptionExecutor.modiscoWrapper;
import org.eclipse.gmt.modisco.java.AbstractMethodDeclaration;
import org.eclipse.gmt.modisco.java.AbstractMethodInvocation;
import org.eclipse.gmt.modisco.java.AbstractTypeDeclaration;
import org.eclipse.gmt.modisco.java.AbstractTypeQualifiedExpression;
import org.eclipse.gmt.modisco.java.AbstractVariablesContainer;
import org.eclipse.gmt.modisco.java.Annotation;
import org.eclipse.gmt.modisco.java.Archive;
import org.eclipse.gmt.modisco.java.AssertStatement;
import org.eclipse.gmt.modisco.java.ASTNode;
import org.eclipse.gmt.modisco.java.AnnotationMemberValuePair;
import org.eclipse.gmt.modisco.java.AnnotationTypeDeclaration;
import org.eclipse.gmt.modisco.java.AnnotationTypeMemberDeclaration;
import org.eclipse.gmt.modisco.java.AnonymousClassDeclaration;
import org.eclipse.gmt.modisco.java.ArrayAccess;
import org.eclipse.gmt.modisco.java.ArrayCreation;
import org.eclipse.gmt.modisco.java.ArrayInitializer;
import org.eclipse.gmt.modisco.java.ArrayLengthAccess;
import org.eclipse.gmt.modisco.java.ArrayType;
import org.eclipse.gmt.modisco.java.Assignment;
import org.eclipse.gmt.modisco.java.AssignmentKind;
import org.eclipse.gmt.modisco.java.BodyDeclaration;
import org.eclipse.gmt.modisco.java.BooleanLiteral;
import org.eclipse.gmt.modisco.java.BlockComment;
import org.eclipse.gmt.modisco.java.Block;
import org.eclipse.gmt.modisco.java.BreakStatement;
import org.eclipse.gmt.modisco.java.CastExpression;
import org.eclipse.gmt.modisco.java.CatchClause;
import org.eclipse.gmt.modisco.java.CharacterLiteral;
import org.eclipse.gmt.modisco.java.ClassFile;
import org.eclipse.gmt.modisco.java.ClassInstanceCreation;
import org.eclipse.gmt.modisco.java.ConstructorDeclaration;
import org.eclipse.gmt.modisco.java.ConditionalExpression;
import org.eclipse.gmt.modisco.java.ConstructorInvocation;
import org.eclipse.gmt.modisco.java.ClassDeclaration;
import org.eclipse.gmt.modisco.java.Comment;
import org.eclipse.gmt.modisco.java.CompilationUnit;
import org.eclipse.gmt.modisco.java.ContinueStatement;
import org.eclipse.gmt.modisco.java.DoStatement;
import org.eclipse.gmt.modisco.java.EmptyStatement;
import org.eclipse.gmt.modisco.java.EnhancedForStatement;
import org.eclipse.gmt.modisco.java.EnumConstantDeclaration;
import org.eclipse.gmt.modisco.java.EnumDeclaration;
import org.eclipse.gmt.modisco.java.Expression;
import org.eclipse.gmt.modisco.java.ExpressionStatement;
import org.eclipse.gmt.modisco.java.FieldAccess;
import org.eclipse.gmt.modisco.java.FieldDeclaration;
import org.eclipse.gmt.modisco.java.ForStatement;
import org.eclipse.gmt.modisco.java.IfStatement;
import org.eclipse.gmt.modisco.java.ImportDeclaration;
import org.eclipse.gmt.modisco.java.InfixExpression;
import org.eclipse.gmt.modisco.java.InfixExpressionKind;
import org.eclipse.gmt.modisco.java.InheritanceKind;
import org.eclipse.gmt.modisco.java.Initializer;
import org.eclipse.gmt.modisco.java.InstanceofExpression;
import org.eclipse.gmt.modisco.java.InterfaceDeclaration;
import org.eclipse.gmt.modisco.java.Javadoc;
import org.eclipse.gmt.modisco.java.LabeledStatement;
import org.eclipse.gmt.modisco.java.LineComment;
import org.eclipse.gmt.modisco.java.Manifest;
import org.eclipse.gmt.modisco.java.ManifestAttribute;
import org.eclipse.gmt.modisco.java.ManifestEntry;
import org.eclipse.gmt.modisco.java.MemberRef;
import org.eclipse.gmt.modisco.java.MethodDeclaration;
import org.eclipse.gmt.modisco.java.MethodInvocation;
import org.eclipse.gmt.modisco.java.MethodRef;
import org.eclipse.gmt.modisco.java.MethodRefParameter;
import org.eclipse.gmt.modisco.java.Model;
import org.eclipse.gmt.modisco.java.Modifier;
import org.eclipse.gmt.modisco.java.NamedElement;
import org.eclipse.gmt.modisco.java.NamespaceAccess;
import org.eclipse.gmt.modisco.java.NumberLiteral;
import org.eclipse.gmt.modisco.java.NullLiteral;
import org.eclipse.gmt.modisco.java.Package;
import org.eclipse.gmt.modisco.java.PackageAccess;
import org.eclipse.gmt.modisco.java.ParameterizedType;
import org.eclipse.gmt.modisco.java.ParenthesizedExpression;
import org.eclipse.gmt.modisco.java.PostfixExpression;
import org.eclipse.gmt.modisco.java.PostfixExpressionKind;
import org.eclipse.gmt.modisco.java.PrefixExpression;
import org.eclipse.gmt.modisco.java.PrefixExpressionKind;
import org.eclipse.gmt.modisco.java.PrimitiveType;
import org.eclipse.gmt.modisco.java.PrimitiveTypeBoolean;
import org.eclipse.gmt.modisco.java.PrimitiveTypeByte;
import org.eclipse.gmt.modisco.java.PrimitiveTypeChar;
import org.eclipse.gmt.modisco.java.PrimitiveTypeDouble;
import org.eclipse.gmt.modisco.java.PrimitiveTypeShort;
import org.eclipse.gmt.modisco.java.PrimitiveTypeFloat;
import org.eclipse.gmt.modisco.java.PrimitiveTypeInt;
import org.eclipse.gmt.modisco.java.PrimitiveTypeLong;
import org.eclipse.gmt.modisco.java.PrimitiveTypeVoid;
import org.eclipse.gmt.modisco.java.ReturnStatement;
import org.eclipse.gmt.modisco.java.SingleVariableAccess;
import org.eclipse.gmt.modisco.java.SingleVariableDeclaration;
import org.eclipse.gmt.modisco.java.Statement;
import org.eclipse.gmt.modisco.java.StringLiteral;
import org.eclipse.gmt.modisco.java.SuperConstructorInvocation;
import org.eclipse.gmt.modisco.java.SuperFieldAccess;
import org.eclipse.gmt.modisco.java.SuperMethodInvocation;
import org.eclipse.gmt.modisco.java.SwitchCase;
import org.eclipse.gmt.modisco.java.SwitchStatement;
import org.eclipse.gmt.modisco.java.SynchronizedStatement;
import org.eclipse.gmt.modisco.java.TagElement;
import org.eclipse.gmt.modisco.java.TextElement;
import org.eclipse.gmt.modisco.java.ThisExpression;
import org.eclipse.gmt.modisco.java.ThrowStatement;
import org.eclipse.gmt.modisco.java.TryStatement;
import org.eclipse.gmt.modisco.java.Type;
import org.eclipse.gmt.modisco.java.TypeAccess;
import org.eclipse.gmt.modisco.java.TypeDeclaration;
import org.eclipse.gmt.modisco.java.TypeDeclarationStatement;
import org.eclipse.gmt.modisco.java.TypeLiteral;
import org.eclipse.gmt.modisco.java.TypeParameter;
import org.eclipse.gmt.modisco.java.UnresolvedItem;
import org.eclipse.gmt.modisco.java.UnresolvedItemAccess;
import org.eclipse.gmt.modisco.java.UnresolvedAnnotationDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedAnnotationTypeMemberDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedClassDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedEnumDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedInterfaceDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedLabeledStatement;
import org.eclipse.gmt.modisco.java.UnresolvedMethodDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedSingleVariableDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedType;
import org.eclipse.gmt.modisco.java.UnresolvedTypeDeclaration;
import org.eclipse.gmt.modisco.java.UnresolvedVariableDeclarationFragment;
import org.eclipse.gmt.modisco.java.VariableDeclaration;
import org.eclipse.gmt.modisco.java.VariableDeclarationExpression;
import org.eclipse.gmt.modisco.java.VariableDeclarationFragment;
import org.eclipse.gmt.modisco.java.VariableDeclarationStatement;
import org.eclipse.gmt.modisco.java.VisibilityKind;
import org.eclipse.gmt.modisco.java.WildCardType;
import org.eclipse.gmt.modisco.java.WhileStatement;

public interface ModiscoWrapperVisitor {

    public void visit(AbstractMethodDeclarationWrapper abstractMethodDeclaration);
    public void visit(AbstractMethodInvocationWrapper abstractMethodInvocation);
    public void visit(AbstractTypeDeclarationWrapper abstractTypeDeclaration);
    public void visit(AbstractTypeQualifiedExpressionWrapper abstractTypeQualifiedExpression);
    public void visit(AbstractVariablesContainerWrapper abstractVariablesContainer);
    public void visit(AnnotationWrapper annotation);
    public void visit(ArchiveWrapper archive);
    public void visit(AssertStatementWrapper assertStatement);
    public void visit(ASTNodeWrapper aSTNode);
    public void visit(AnnotationMemberValuePairWrapper annotationMemberValuePair);
    public void visit(AnnotationTypeDeclarationWrapper annotationTypeDeclaration);
    public void visit(AnnotationTypeMemberDeclarationWrapper annotationTypeMemberDeclaration);
    public void visit(AnonymousClassDeclarationWrapper anonymousClassDeclaration);
    public void visit(ArrayAccessWrapper arrayAccess);
    public void visit(ArrayCreationWrapper arrayCreation);
    public void visit(ArrayInitializerWrapper arrayInitializer);
    public void visit(ArrayLengthAccessWrapper arrayLengthAccess);
    public void visit(ArrayTypeWrapper arrayType);
    public void visit(AssignmentWrapper assignment);
    public void visit(BodyDeclarationWrapper bodyDeclaration);
    public void visit(BooleanLiteralWrapper booleanLiteral);
    public void visit(BlockCommentWrapper blockComment);
    public void visit(BlockWrapper block);
    public void visit(BreakStatementWrapper breakStatement);
    public void visit(CastExpressionWrapper castExpression);
    public void visit(CatchClauseWrapper catchClause);
    public void visit(CharacterLiteralWrapper characterLiteral);
    public void visit(ClassFileWrapper classFile);
    public void visit(ClassInstanceCreationWrapper classInstanceCreation);
    public void visit(ConstructorDeclarationWrapper constructorDeclaration);
    public void visit(ConditionalExpressionWrapper conditionalExpression);
    public void visit(ConstructorInvocationWrapper constructorInvocation);
    public void visit(ClassDeclarationWrapper classDeclaration);
    public void visit(CommentWrapper comment);
    public void visit(CompilationUnitWrapper compilationUnit);
    public void visit(ContinueStatementWrapper continueStatement);
    public void visit(DoStatementWrapper doStatement);
    public void visit(EmptyStatementWrapper emptyStatement);
    public void visit(EnhancedForStatementWrapper enhancedForStatement);
    public void visit(EnumConstantDeclarationWrapper enumConstantDeclaration);
    public void visit(EnumDeclarationWrapper enumDeclaration);
    public void visit(ExpressionWrapper expression);
    public void visit(ExpressionStatementWrapper expressionStatement);
    public void visit(FieldAccessWrapper fieldAccess);
    public void visit(FieldDeclarationWrapper fieldDeclaration);
    public void visit(ForStatementWrapper forStatement);
    public void visit(IfStatementWrapper ifStatement);
    public void visit(ImportDeclarationWrapper importDeclaration);
    public void visit(InfixExpressionWrapper infixExpression);
    public void visit(InitializerWrapper initializer);
    public void visit(InstanceofExpressionWrapper instanceofExpression);
    public void visit(InterfaceDeclarationWrapper interfaceDeclaration);
    public void visit(JavadocWrapper javadoc);
    public void visit(LabeledStatementWrapper labeledStatement);
    public void visit(LineCommentWrapper lineComment);
    public void visit(MemberRefWrapper memberRef);
    public void visit(MethodDeclarationWrapper methodDeclaration);
    public void visit(MethodInvocationWrapper methodInvocation);
    public void visit(MethodRefWrapper methodRef);
    public void visit(MethodRefParameterWrapper methodRefParameter);
    public void visit(ModifierWrapper modifier);
    public void visit(NamedElementWrapper namedElement);
    public void visit(NamespaceAccessWrapper namespaceAccess);
    public void visit(NumberLiteralWrapper numberLiteral);
    public void visit(NullLiteralWrapper nullLiteral);
    public void visit(PackageWrapper pack);
    public void visit(PackageAccessWrapper packageAccess);
    public void visit(ParameterizedTypeWrapper parameterizedType);
    public void visit(ParenthesizedExpressionWrapper parenthesizedExpression);
    public void visit(PostfixExpressionWrapper postfixExpression);
    public void visit(PrefixExpressionWrapper prefixExpression);
    public void visit(PrimitiveTypeWrapper primitiveType);
    public void visit(PrimitiveTypeBooleanWrapper primitiveTypeBoolean);
    public void visit(PrimitiveTypeByteWrapper primitiveTypeByte);
    public void visit(PrimitiveTypeCharWrapper primitiveTypeChar);
    public void visit(PrimitiveTypeDoubleWrapper primitiveTypeDouble);
    public void visit(PrimitiveTypeShortWrapper primitiveTypeShort);
    public void visit(PrimitiveTypeFloatWrapper primitiveTypeFloat);
    public void visit(PrimitiveTypeIntWrapper primitiveTypeInt);
    public void visit(PrimitiveTypeLongWrapper primitiveTypeLong);
    public void visit(PrimitiveTypeVoidWrapper primitiveTypeVoid);
    public void visit(ReturnStatementWrapper returnStatement);
    public void visit(SingleVariableAccessWrapper singleVariableAccess);
    public void visit(SingleVariableDeclarationWrapper singleVariableDeclaration);
    public void visit(StatementWrapper statement);
    public void visit(StringLiteralWrapper stringLiteral);
    public void visit(SuperConstructorInvocationWrapper superConstructorInvocation);
    public void visit(SuperFieldAccessWrapper superFieldAccess);
    public void visit(SuperMethodInvocationWrapper superMethodInvocation);
    public void visit(SwitchCaseWrapper switchCase);
    public void visit(SwitchStatementWrapper switchStatement);
    public void visit(SynchronizedStatementWrapper synchronizedStatement);
    public void visit(TagElementWrapper tagElement);
    public void visit(TextElementWrapper textElement);
    public void visit(ThisExpressionWrapper thisExpression);
    public void visit(ThrowStatementWrapper throwStatement);
    public void visit(TryStatementWrapper tryStatement);
    public void visit(TypeWrapper type);
    public void visit(TypeAccessWrapper typeAccess);
    public void visit(TypeDeclarationWrapper typeDeclaration);
    public void visit(TypeDeclarationStatementWrapper typeDeclarationStatement);
    public void visit(TypeLiteralWrapper typeLiteral);
    public void visit(TypeParameterWrapper typeParameter);
    public void visit(UnresolvedItemWrapper unresolvedItem);
    public void visit(UnresolvedItemAccessWrapper unresolvedItemAccess);
    public void visit(UnresolvedAnnotationDeclarationWrapper unresolvedAnnotationDeclaration);
    public void visit(UnresolvedAnnotationTypeMemberDeclarationWrapper unresolvedAnnotationTypeMemberDeclaration);
    public void visit(UnresolvedClassDeclarationWrapper unresolvedClassDeclaration);
    public void visit(UnresolvedEnumDeclarationWrapper unresolvedEnumDeclaration);
    public void visit(UnresolvedInterfaceDeclarationWrapper unresolvedInterfaceDeclaration);
    public void visit(UnresolvedLabeledStatementWrapper unresolvedLabeledStatement);
    public void visit(UnresolvedMethodDeclarationWrapper unresolvedMethodDeclaration);
    public void visit(UnresolvedSingleVariableDeclarationWrapper unresolvedSingleVariableDeclaration);
    public void visit(UnresolvedTypeWrapper unresolvedType);
    public void visit(UnresolvedTypeDeclarationWrapper unresolvedTypeDeclaration);
    public void visit(UnresolvedVariableDeclarationFragmentWrapper unresolvedVariableDeclarationFragment);
    public void visit(VariableDeclarationWrapper variableDeclaration);
    public void visit(VariableDeclarationExpressionWrapper variableDeclarationExpression);
    public void visit(VariableDeclarationFragmentWrapper variableDeclarationFragment);
    public void visit(VariableDeclarationStatementWrapper variableDeclarationStatement);
    public void visit(WildCardTypeWrapper wildCardType);
    public void visit(WhileStatementWrapper whileStatement);
}
