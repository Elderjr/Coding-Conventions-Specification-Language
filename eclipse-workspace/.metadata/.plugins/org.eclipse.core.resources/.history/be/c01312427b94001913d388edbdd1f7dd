java::ClassDeclaration.allInstances()->select(class: java::ClassDeclaration |
    let fields_1 = class.bodyDeclarations->select(field_1| field_1.oclIsTypeOf(java::FieldDeclaration) and field_1.oclAsType(java::FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    let fields_2 = class.bodyDeclarations->select(field_2| field_2.oclIsTypeOf(java::FieldDeclaration) and field_2.oclAsType(java::FieldDeclaration).modifier.visibility = java::VisibilityKind::private) in
    fields_1->size() > 0 and fields_2->size() > 0 and
    fields_1->union(fields_2)->asOrderedSet()->size() >= 2
)->union(
java::InterfaceDeclaration.allInstances()->select(interface: java::InterfaceDeclaration |
    let fields_1 = interface.bodyDeclarations->select(field_1| field_1.oclIsTypeOf(java::FieldDeclaration) and field_1.oclAsType(java::FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    let fields_2 = interface.bodyDeclarations->select(field_2| field_2.oclIsTypeOf(java::FieldDeclaration) and field_2.oclAsType(java::FieldDeclaration).modifier.visibility = java::VisibilityKind::private) in
    fields_1->size() > 0 and fields_2->size() > 0 and
    fields_1->union(fields_2)->asOrderedSet()->size() >= 2
))
