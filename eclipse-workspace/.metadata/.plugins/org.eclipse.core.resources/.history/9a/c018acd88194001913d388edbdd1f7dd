[comment encoding = UTF-8 /]
[module methodModule('http://www.example.org/ccsl')]
[import org::ccsl::gen::ocl::elements::elementModule /] 
[import org::ccsl::gen::ocl::elements::namedElement::namedElementModule /]


[query public queryConditionMethod(namedElement: NamedElement, contextElement: Element, varName: String, filters: OrderedSet(AtomicFilter), exactMatch: Boolean): OrderedSet(String) =
OrderedSet(String){
  	namedElement.defineNameQueryCondition(varName)
}
->select(condition: String | condition.trim().size() > 0)/]

[template public defineQueryCondition(element: Element, contextElement: Element, varName: String, filters: OrderedSet(AtomicFilter), exactMatch: Boolean) ? (element.oclIsTypeOf(NamedElement)) post(trim())]
[for (condition: String | element.oclAsType(NamedElement).queryConditionNamedElement(contextElement, varName, filters, exactMatch)) separator(' and \n')]
[condition /][/for]
[/template]

[template private defineNameQueryCondition(namedElement: NamedElement, varName: String)]
[if not namedElement.name.oclIsUndefined()] and [varName /].name='[namedElement.name/]'[/if]
[/template]