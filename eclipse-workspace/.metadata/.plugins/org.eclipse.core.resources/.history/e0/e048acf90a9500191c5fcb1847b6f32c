java::ClassDeclaration.allInstances()->select(class: java::ClassDeclaration |
    let class_1_fields_2 = class.bodyDeclarations->select(class_1_fieldToSelect_2| class_1_fieldToSelect_2.oclIsTypeOf(FieldDeclaration) and class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    class_1_fields_2->size() > 0 and
    class_1_fields_2->asOrderedSet()->size() >= 1
)->union(
java::InterfaceDeclaration.allInstances()->select(interface: java::InterfaceDeclaration |
    let class_1_fields_2 = interface.bodyDeclarations->select(class_1_fieldToSelect_2| class_1_fieldToSelect_2.oclIsTypeOf(FieldDeclaration) and class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    class_1_fields_2->size() > 0 and
    class_1_fields_2->asOrderedSet()->size() >= 1
))java::ClassDeclaration.allInstances()->select(class: java::ClassDeclaration |
    let class_1_fields_2 = class.bodyDeclarations->select(class_1_fieldToSelect_2| class_1_fieldToSelect_2.oclIsTypeOf(FieldDeclaration) and class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    class_1_fields_2->size() > 0 and
    class_1_fields_2->asOrderedSet()->size() >= 1
)->union(
java::InterfaceDeclaration.allInstances()->select(interface: java::InterfaceDeclaration |
    let class_1_fields_2 = interface.bodyDeclarations->select(class_1_fieldToSelect_2| class_1_fieldToSelect_2.oclIsTypeOf(FieldDeclaration) and class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    class_1_fields_2->size() > 0 and
    class_1_fields_2->asOrderedSet()->size() >= 1
))

java::ClassDeclaration.allInstances()->select(class: java::ClassDeclaration |
    let class_1_fields_2 = class.bodyDeclarations->select(class_1_fieldToSelect_2| class_1_fieldToSelect_2.oclIsTypeOf(FieldDeclaration) and class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    class_1_fields_2->size() > 0 and
    class_1_fields_2->asOrderedSet()->size() >= 1
)->union(
java::InterfaceDeclaration.allInstances()->select(interface: java::InterfaceDeclaration |
    let class_1_fields_2 = interface.bodyDeclarations->select(class_1_fieldToSelect_2| class_1_fieldToSelect_2.oclIsTypeOf(FieldDeclaration) and class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.visibility = java::VisibilityKind::public) in
    class_1_fields_2->size() > 0 and
    class_1_fields_2->asOrderedSet()->size() >= 1
))
