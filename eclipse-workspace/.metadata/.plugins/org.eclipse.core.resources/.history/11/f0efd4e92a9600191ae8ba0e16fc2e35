[comment encoding = UTF-8 /]
[module elementModule('http://www.example.org/ccsl')  /]
[import org::ccsl::gen::ocl::filters::filterModule /]
[import org::ccsl::gen::ocl::services::elementIdentifierService::elementIndentifierService/]
[import org::gen::ocl::strings::stringModule /]

[query public getAllElementConditions(element: Element, contextElement: Element, varName: String, filters: OrderedSet(AtomicFilter), exactMatch: Boolean): Set(String) =
Set(String) {
  ''
}
->union(filters->select(f: AtomicFilter | f.targets->includes(element)).callFilterGenerateConditions(element, varName)->flatten()->asSet())
->select(condition: String | condition.trim().size() > 0)
/]

[template public generateConditions(element: Element, contextElement: Element, varName: String, filters: OrderedSet(AtomicFilter), exactMatch: Boolean, typeCheck: Boolean) /]

[template public generateSelect(element : Element, filters: OrderedSet(AtomicFilter)) ? (element.oclIsTypeOf(MethodInvocation))][/template]