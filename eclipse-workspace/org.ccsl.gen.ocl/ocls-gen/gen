------- Composite Iteration --------
  ------------- Iteration -------------:
    java::ClassDeclaration.allInstances()->select(class: java::ClassDeclaration |
      ( -- JavaClass Conditions
        not (class.name.matches('*.Bean')) and 
        let class_1_fields_2 = class.bodyDeclarations->select(class_1_fieldToSelect_2 |
            ( --Variable Conditions
              class_1_fieldToSelect_2.oclIsKindOf(FieldDeclaration)
            ) --End Variable Conditions
        ) in
        class_1_fields_2->size() > 0 and
        class_1_fields_2->asOrderedSet()->size() >= 1
      ) -- End JavaClass Conditions
    )
  ----------- End Iteration -----------;
  ->intersection(
  ------- Composite Iteration --------
    ------------- Iteration -------------:
      java::ClassDeclaration.allInstances()->select(class: java::ClassDeclaration |
        ( -- JavaClass Conditions
          let class_1_fields_2 = class.bodyDeclarations->select(class_1_fieldToSelect_2 |
              ( --Variable Conditions
                class_1_fieldToSelect_2.oclIsKindOf(FieldDeclaration) and
                not (class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.static)
              ) --End Variable Conditions
          ) in
          class_1_fields_2->size() > 0 and
          class_1_fields_2->asOrderedSet()->size() >= 1
        ) -- End JavaClass Conditions
      )
    ----------- End Iteration -----------;
    ->union(
    ------------- Iteration -------------:
      java::ClassDeclaration.allInstances()->select(class: java::ClassDeclaration |
        ( -- JavaClass Conditions
          let class_1_fields_2 = class.bodyDeclarations->select(class_1_fieldToSelect_2 |
              ( --Variable Conditions
                class_1_fieldToSelect_2.oclIsKindOf(FieldDeclaration) and
                not (class_1_fieldToSelect_2.oclAsType(FieldDeclaration).modifier.inheritance = java::InheritanceKind::final)
              ) --End Variable Conditions
          ) in
          class_1_fields_2->size() > 0 and
          class_1_fields_2->asOrderedSet()->size() >= 1
        ) -- End JavaClass Conditions
      )
    ----------- End Iteration -----------;
    )--close union
  ------- End Composite Iteration --------
  )--close intersection
------- End Composite Iteration --------
