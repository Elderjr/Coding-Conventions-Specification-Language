[comment encoding = UTF-8 /]
[module variableToOcl('http://www.example.org/ccsl')]
[import org::ccsl::gen::ocl::elements::namedElement::namedElementToOcl /]


[template public elementToOcl(element: Element) ? (element.oclIsTypeOf(Variable)) post(trim())]
[let variable: Variable = element.oclAsType(Variable)]
code::StorableUnit.allInstances()->select(e: code::StorableUnit | true and [variable.variableToOcl()/])
[/let]
[/template]

[template public variableToOcl(variable : Variable) post(trim())]
[if variable.type.oclIsUndefined() = false] e.type.name='[if variable.type.oclIsKindOf(ComplexType)][variable.type.oclAsType(ComplexType).name/][else][variable.type.oclAsType(PrimitiveType).name/][/if][/if]'
[variable.namedElementToOcl()/]
[/template]
