[comment encoding = UTF-8 /]
[module namedElementOperations('http://www.example.org/ccsl/elements/namedElements')]
[import org::ccsl::gen::ocl::element::elementOperations /]
[import org::ccsl::gen::ocl::commom::stringUtils /]

[template public generatesConditionsNamedElement(namedElement : NamedElement, varName: String, exactMatch: Boolean, typeCheck:Boolean)]
[let allConditions: OrderedSet(String) = OrderedSet(String){
  namedElement.generatesConditionsForName(varName),
  namedElement.generatesConditionsElement(varName, exactMatch, false)
}->select(s | s.trim().size() > 0)]
[for (condition: String | allConditions) separator(' and\n')]
[condition.printStringWithIdentation() /][/for][/let]
[/template]

[template public generatesConditionsForName(namedElement: NamedElement, varName: String)]
[if not namedElement.name.oclIsUndefined()][varName /].name = '[namedElement.name /]'[/if]
[/template]