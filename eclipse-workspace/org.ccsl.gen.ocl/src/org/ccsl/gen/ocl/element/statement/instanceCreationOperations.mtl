[comment encoding = UTF-8 /]
[module instanceCreationOperations('http://www.example.org/ccsl')]
[import org::ccsl::gen::ocl::element::elementOperations /]
[import org::ccsl::gen::ocl::element::statement::methodInvocationOperations /]
[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::elementUtils /]

[template public generatesConditionsInstanceCreation(instCreation: InstanceCreation, varName: String, typeCheck:Boolean)]
[let allConditions: OrderedSet(String) = OrderedSet(String){
  instCreation.generatesConditionsMethodInvocation(varName, false, false),
  instCreation.generatesConditionsForType(varName),
  instCreation.generatesConditionsElement(varName, false, false)
}->select(s | s.trim().size() > 0)]
[for (condition: String | allConditions) separator(' and\n')]
[condition.printStringWithIdentation() /][/for][/let]
[/template]

[template public generatesConditionsForType(instCreation: InstanceCreation, varName: String)]
[if not instCreation.type.oclIsUndefined()]
[instCreation.generatesGenericConditionsForAttribute(instCreation.type, 'type.type', false, varName, false) /][/if]
[/template]
