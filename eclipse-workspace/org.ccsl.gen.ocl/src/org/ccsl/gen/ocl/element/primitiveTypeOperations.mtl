[comment encoding = UTF-8 /]
[module primitiveTypeOperations('http://www.example.org/ccsl')]

[query public getPrimitiveTypeMatchingJavaMetaclasses(primitiveType: PrimitiveType): OrderedSet(String)=
  if not primitiveType.name.oclIsUndefined() then
    if primitiveType.name = 'boolean' then
      OrderedSet(String){'PrimitiveTypeBoolean'}
    else if primitiveType.name = 'byte' then
      OrderedSet(String){'PrimitiveTypeByte'}
    else if primitiveType.name = 'char' then
      OrderedSet(String){'PrimitiveTypeChar'}
    else if primitiveType.name = 'double' then
      OrderedSet(String){'PrimitiveTypeDouble'}
    else if primitiveType.name = 'float' then
      OrderedSet(String){'PrimitiveTypeFloat'}
    else if primitiveType.name = 'int' then
      OrderedSet(String){'PrimitiveTypeInt'}
    else if primitiveType.name = 'long' then
      OrderedSet(String){'PrimitiveTypeLong'}
    else if primitiveType.name = 'short' then
      OrderedSet(String){'PrimitiveTypeShort'}
    else if primitiveType.name = 'void' then
      OrderedSet(String){'PrimitiveTypeVoid'}
    else
      OrderedSet(String){'PrimitiveTypeBoolean', 'PrimitiveTypeByte', 'PrimitiveTypeChar', 
'PrimitiveTypeDouble', 'PrimitiveTypeFloat', 'PrimitiveTypeInt', 'PrimitiveTypeLong', 'PrimitiveTypeShort', 'PrimitiveTypeVoid'}
    endif endif endif endif endif endif endif endif endif
  else
    OrderedSet(String){'PrimitiveTypeBoolean', 'PrimitiveTypeByte', 'PrimitiveTypeChar', 
'PrimitiveTypeDouble', 'PrimitiveTypeFloat', 'PrimitiveTypeInt', 'PrimitiveTypeLong', 'PrimitiveTypeShort', 'PrimitiveTypeVoid'}
  endif
/]

[query public getPrimitiveTypeConditions(primitiveType: PrimitiveType, varname: String): OrderedSet(String) =
OrderedSet(String){
  primitiveType.generatesConditionsForName(varname)
}->select(s | s.trim().size() > 0)
/]

[template public generatesConditionsForName(primitiveType: PrimitiveType, varname: String)]
[for (javaMetaclass: String | primitiveType.getPrimitiveTypeMatchingJavaMetaclasses()) separator (' or ')]
[varname /].oclIsKindOf([javaMetaclass /])[/for]
[/template]
