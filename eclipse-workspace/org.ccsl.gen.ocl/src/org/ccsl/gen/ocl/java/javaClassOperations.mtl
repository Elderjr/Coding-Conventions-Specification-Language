[comment encoding = UTF-8 /]
[module javaClassOperations('http://www.example.org/ccsl')]
[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::element::namedElement::complexTypeOperations/]

[template private printAllConditionsJavaClass(javaClass: JavaClass, varName: String, exactMatch:Boolean)]
[let allConditions: OrderedSet(String) = OrderedSet(String){
  javaClass.generatesConditionsComplexType(varName, exactMatch, false)
}->select(s | s.trim().size() > 0)]
[for (condition: String | allConditions) separator(' and\n')]
[condition /][/for][/let]
[/template]

[template public generatesConditionsJavaClass(javaClass: JavaClass, varName: String, exactMatch: Boolean, typeCheck:Boolean)]
--Java Class Conditions
[if typeCheck and javaClass.oclIsTypeOf(JavaClass)]
(
[let conditions: String = javaClass.printAllConditionsJavaClass(varName.concat('.oclAsType(ClassDeclaration)'), javaClass.exact)]
  [varName /].oclIsKindOf(ClassDeclaration)[if conditions.trim().size() > 0] and
  [conditions.printStringWithIdentation() /]
[/if][/let]
)
[else]
[javaClass.printAllConditionsJavaClass(varName, exactMatch) /][/if]
[/template]
