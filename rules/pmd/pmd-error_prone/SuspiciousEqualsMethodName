CompositeRule {
    operator: "OR",
    rules: [

        //equals com mais de um parâmetro 
        AtomicRule {
            elements: [Method {
                name: "equals",
                params: [Variable{}, Variable{}]
            }]
        }

        //equals com parâmetro que não é Object
        AtomicRule {
            elements: [Method {
                name: "equals",
                params: [v as Variable{}]
            }],
            filters: [
                TemplateFilter{
                    target: v,
                    negated: true,
                    template: Variable {
                        type: ComplexType{name:"Object"}
                    }
                }
            ]
        }

        //equals com retorno diferente de boolean
        AtomicRule {
            elements: [m as Method {
                name: "equals"
            }],
            filters: [
                TemplateFilter{
                    target: m,
                    negated: true,
                    template: Method {
                        returnType: PrimitiveType{name: "boolean"}
                    }
                }
            ]
        }
    ]
}
