[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/emf/2002/Ecore')]


[template public writeAllWrappers(pack : EPackage)]
[comment @main/]
[for (classifier: EClassifier | pack.eClassifiers)]
  [classifier.writeWrapper() /]
  [comment classifier.writeDeleteContentHelper() /]
[/for]
[comment pack.writeModiscoVisitor() /]
[comment pack.writeDeleteAction() /]
[/template]

[template private writeModiscoVisitor(pack: EPackage)]
[file ('wrappers/ModiscoVisitor.java', false, 'UTF-8')]
package ccslFaultTypeDescriptionExecutor.modiscoWrapper;
[for (classifier: EClassifier | pack.eClassifiers)]
import org.eclipse.gmt.modisco.java.[classifier.name /];
[/for]

public interface ModiscoVisitor {

	[for (classifier: EClassifier | pack.eClassifiers)]
    public void accept([classifier.name /] [classifier.name.toLowerFirst() /]);
    [/for]
}
[/file]
[/template]

[template private writeWrapper(classifier: EClassifier)]
[file ('wrappers/'.concat(classifier.name).concat('Wrapper.java'), false, 'UTF-8')]
package ccslFaultTypeDescriptionExecutor.modiscoWrapper;
import org.eclipse.gmt.modisco.java.ASTNode;
import org.eclipse.gmt.modisco.java.[classifier.name /];
import ccslFaultTypeDescriptionExecutor.modiscoWrapper.ModiscoASTNodeWrapper;

public class [classifier.name /]Wrapper extends ModiscoASTNodeWrapper {

	public [classifier.name /]Wrapper([classifier.name /] [classifier.name.toLowerFirst() /]) {
        super([classifier.name.toLowerFirst() /]);
	}

	@Override
	public boolean deleteField(ASTNode field, ASTNode originalFieldNode) {
      throw new UnsupportedOperationException("deleteField from [classifier.name /] not supported");
	}
	
}
[/file]
[/template]

[template private writeDeleteContentHelper(classifier: EClassifier)]
[file ('deleteHelpers/Delete'.concat(classifier.name).concat('Content.java'), false, 'UTF-8')]
package ccslFaultTypeDescriptionExecutor.faultTypeDescription.injectionAction.deleteNodeActionHelper;
import org.eclipse.gmt.modisco.java.ASTNode;
import org.eclipse.gmt.modisco.java.[classifier.name /];

public class Delete[classifier.name /]Content {

	public static boolean delete[classifier.name /]Content([classifier.name /] [classifier.name.toLowerFirst() /], ASTNode field, ASTNode originalField) {
      throw new UnsupportedOperationException("Method delete[classifier.name /]Content not supported");
	}
	
}
[/file]
[/template]

[template private writeDeleteAction(pack: EPackage)]
[file ('DeleteNodeCommand.java', false, 'UTF-8')]
package ccslFaultTypeDescriptionExecutor.faultTypeDescription.injectionAction;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.Collection;
import ccslFaultTypeDescriptionExecutor.modiscoWrapper.ModiscoVisitor;
import org.eclipse.gmt.modisco.java.*;
import ccslFaultTypeDescriptionExecutor.faultTypeDescription.injectionAction.deleteNodeActionHelper.*;

public class DeleteNodeCommand implements InjectionAction, ModiscoVisitor {

  private boolean nodeDeleted;
  private ASTNode field;
  private ASTNode originalField;

  @Override
  public boolean doAction(ASTNode node){
    //TODO
    this.nodeDeleted = false;
    return this.nodeDeleted;
  }

[for (classifier: EClassifier | pack.eClassifiers) separator('\n')]
  @Override
  public void accept([classifier.name /] [classifier.name.toLowerFirst() /]) {
    this.nodeDeleted = Delete[classifier.name /]Content.delete[classifier.name /]Content([classifier.name.toLowerFirst() /], field, originalField);
  }
[/for] 
}
[/file]
[/template]