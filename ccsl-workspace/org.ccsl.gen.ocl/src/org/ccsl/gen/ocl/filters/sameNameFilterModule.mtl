[comment encoding = UTF-8 /]
[module sameNameFilterModule('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::commom::uniqueNameGeneratorModule /]
[import org::ccsl::gen::ocl::commom::walkHelperModule /]
[import org::ccsl::gen::ocl::element::namedElement::namedElementConditionsBuilder /]

[template private writeGetNameExpression(target: Element) /]

[template private writeGetNameExpression(target: NamedElement)]
[target.getUniqueOclName() /].oclAsType(NamedElement).name
[/template]

[template private writeGetNameExpression(target: StringLiteral)]
[target.getUniqueOclName() /].oclAsType(StringLiteral).escapedValue
[/template]

[template public writeSameNameFilterConditions(f: SameNameFilter)]
[let firstValue: Element = f.targets->first()]
let name: String = [firstValue.writeGetNameExpression() /] in
[for (e: Element | f.targets->excluding(firstValue)) separator(' and\n')]
[if f.ignoreCase]
[e.writeGetNameExpression() /].equalsIgnoreCase(name)[else]
[e.writeGetNameExpression() /] = name[/if]
[/for][/let]
[/template]