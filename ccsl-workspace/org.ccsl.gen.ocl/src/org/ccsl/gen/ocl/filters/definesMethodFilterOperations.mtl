[comment encoding = UTF-8 /]
[module definesMethodFilterOperations('http://www.example.org/ccsl')]
[import org::ccsl::gen::ocl::commom::uniqueNameGeneratorModule /]
[import org::ccsl::gen::ocl::dispatchers::generalElementWritterConditionsModule /]


[template public generateDefinesMethodFilterConditions(definesMethodFilter: DefinesMethodFilter, target: Element)]
### DefinesMethodFilter is not supported for the type [target.eClass().name /] ###
[/template]

[template public generateDefinesMethodFilterConditions(definesMethodFilter: DefinesMethodFilter, target: ComplexType)]
let [target.getUniqueOclName() /]InheritanceClasses: Set(ClassDeclaration) = [target.getUniqueOclName() /]->closure(c: ClassDeclaration |
  if(not c.superClass.oclIsUndefined()) then
    c.superClass.type
  else
    Set(ClassDeclaration){}
  endif
) in
[for(m: Method | definesMethodFilter.methods) separator(' and\n')]
[target.getUniqueOclName() /]InheritanceClasses->exists(c: ClassDeclaration |
  c.bodyDeclarations->exists([m.getUniqueOclName() /] |
    [m.writeElementConditions(m.getUniqueOclName(), true, 'ASTNode') /]
  )
)[/for]
[/template]
