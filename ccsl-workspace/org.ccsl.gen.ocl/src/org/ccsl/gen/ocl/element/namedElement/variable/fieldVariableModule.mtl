[comment encoding = UTF-8 /]
[module fieldVariableModule('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::commom::elementUtils /]
[comment Type Check Conditions /]
[template public writeFieldVariableTypecheckCondition(var: InitializableVariable, varname: String, typecheck: Boolean) ? (typecheck)]
[varname /].oclIsKindOf(VariableDeclarationFragment) and (not [varname /].oclIsKindOf(UnresolvedItem)) and [varname /].oclContainer().oclIsKindOf(FieldDeclaration)
[/template]

[template public writeFinalCondition(var: FieldVariable, varname: String) ? (not var.final.oclIsUndefined())]
[if(var.final)]
([varname /].oclContainer().oclAsType(FieldDeclaration).modifier <> null and [varname /].oclContainer().oclAsType(FieldDeclaration).modifier.inheritance = InheritanceKind::final)
[else]([varname /].oclContainer().oclAsType(FieldDeclaration).modifier <> null and [varname /].oclContainer().oclAsType(FieldDeclaration).modifier.inheritance <> InheritanceKind::final)[/if]
[/template]

[template public writeStaticCondition(var: FieldVariable, varname: String)? (not var._static.oclIsUndefined())]
[if (var._static)]
([varname /].oclContainer().oclAsType(FieldDeclaration).modifier <> null and [varname /].oclContainer().oclAsType(FieldDeclaration).modifier.static)[else]
([varname /].oclContainer().oclAsType(FieldDeclaration).modifier <> null and not [varname /].oclContainer().oclAsType(FieldDeclaration).modifier.static)[/if]
[/template]