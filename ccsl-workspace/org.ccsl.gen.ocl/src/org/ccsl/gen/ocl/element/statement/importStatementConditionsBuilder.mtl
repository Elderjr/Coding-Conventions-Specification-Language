[comment encoding = UTF-8 /]
[module importStatementConditionsBuilder('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::commom::fieldWritterConditionsModule /]
[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::elementUtils /]
[import org::ccsl::gen::ocl::commom::uniqueNameGeneratorModule /]


[template public writeImportStatementTypecheckCondition(importStmt: ImportStatement, varname: String, typecheck: Boolean) ? (typecheck)]
[varname /].oclIsKindOf(ImportDeclaration)
[/template]


[template public writeImportedElementCondition(importStmt: ImportStatement, varname: String) ? (importStmt.mustWriteConditionFor('importedElement'))]
[let importedElementFieldName: String = importStmt.importedElement.getUniqueOclName()]
let [importedElementFieldName /]: ASTNode = [varname /].importedElement in
[importStmt.generatesFieldCondition(importStmt.importedElement, importedElementFieldName, 'ASTNode') /][/let]
[/template]
