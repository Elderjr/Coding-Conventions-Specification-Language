[comment encoding = UTF-8 /]
[module importStatementConditionsBuilder('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::commom::fieldWritterConditionsModule /]
[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::elementUtils /]
[import org::ccsl::gen::ocl::commom::uniqueNameGeneratorModule /]


[template public writeImportStatementTypecheckCondition(importStmt: ImportStatement, varname: String, typecheck: Boolean) ? (typecheck)]
[varname /].oclIsKindOf(ImportDeclaration)
[/template]


[template public writeImportedElementCondition(importStmt: ImportStatement, varname: String) ? (importStmt.mustWriteConditionFor('importedElement'))]
let [importStmt.importedElement.getFieldName() /]: ASTNode = [varname /].importedElement in
[importStmt.generatesFieldCondition(importStmt.importedElement, importStmt.importedElement.getFieldName(), 'ASTNode') /]
[/template]

[template public writeStaticCondition(importStmt: ImportStatement, varname: String) ? (not importStmt._static.oclIsUndefined())]
[if importStmt._static]
[varname /].static[else] (not [varname /].static)[/if]
[/template]