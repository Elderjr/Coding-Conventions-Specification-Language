[comment encoding = UTF-8 /]
[module packageConditionsBuilder('http://www.example.org/ccsl/elements/namedElements')]
[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::elementUtils /]
[import org::ccsl::gen::ocl::commom::fieldWritterConditionsModule /]

[comment Modisco map:
	*Package 
/]

[comment Package properties: 
	*declaredTypes
/]
[template public writePackageTypecheckCondition(packageElement: Package, varname: String, typecheck: Boolean) ? (typecheck)]
[varname /].oclIsKindOf(Package)
[/template]

[template public writeDeclaredTypesCondition(packageElement: Package, varname: String) ? (packageElement.mustWriteConditionFor('declaredTypes'))]
let declaredTypes: OrderedSet(ASTNode) = [varname /].ownedElements in
[packageElement.writeSetConditions('declaredTypes', packageElement.declaredTypes, 'ASTNode', CollectionKind::ANY) /]
[/template]

