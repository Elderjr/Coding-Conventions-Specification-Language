[comment encoding = UTF-8 /]
[module namedElementOperations('http://www.example.org/ccsl/elements/namedElements')]
[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::elementUtils /]

[template public writeGetNameExpression(namedElement: NamedElement, varname: String, metaclass: String)]
[varname /].oclAsType(NamedElement).name
[/template]

[template public writeGetNameExpression(javaClassOrInterface: DeclaredType, varname: String, metaclass: String) ? ( (not javaClassOrInterface.name.oclIsUndefined()) and (javaClassOrInterface.name.contains('.')))]
[varname /].package->asOrderedSet()->closure(package)->reverse()->iterate(p: Package; fullName: String = '' |
  fullName.concat(p.name).concat('.')
).concat([varname /].name)
[/template]

[template public writeNameCondition(namedElement: NamedElement, varname: String, metaclass: String) ? (not namedElement.name.oclIsUndefined())]
[namedElement.writeGetNameExpression(varname, metaclass) /] = '[namedElement.name /]'
[/template]

[template public writeAvaliableInSourceCode(namedElement: NamedElement, varname: String) ? (not namedElement.avaliableInSourceCode.oclIsUndefined())]
[varname /].proxy = [namedElement.avaliableInSourceCode /]
[/template]