[comment encoding = UTF-8 /]
[module annotationModule('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::commom::fieldWritterConditionsModule /]
[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::elementUtils /]
[import org::ccsl::gen::ocl::commom::uniqueNameGeneratorModule /]


[template public writeAnnotationTypecheckCondition(annotation: Annotation, varname: String, typecheck: Boolean) ? (typecheck)]
[varname /].oclIsKindOf(Annotation)
[/template]

[template public writeTypeCondition(annotation: Annotation, varname: String) ? (annotation.mustWriteConditionFor('type'))]
[let annotationTypeOclName: String = annotation.type.getUniqueOclName()]
let [annotationTypeOclName /]: ASTNode = [varname /].type.type in
[annotation.generatesFieldCondition(annotation.type, annotationTypeOclName, 'ASTNode') /][/let]
[/template]
