[comment encoding = UTF-8 /]
[module simpleMethodConditionsBuilder('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::fieldWritterConditionsModule /]
[import org::ccsl::gen::ocl::commom::elementUtils /]
[import org::ccsl::gen::ocl::commom::uniqueNameGeneratorModule /]


[template public writeSimpleMethodTypecheckCondition(simpleMethod: SimpleMethod, varname: String, typecheck: Boolean) ? (typecheck)]
[varname/].oclIsKindOf(AbstractMethodDeclaration) 
[/template]

[template public writeParamsCondition(m: SimpleMethod, varname: String) ? (m.mustWriteConditionFor('params')){
  parameters: String = m.getUniqueOclName().concat('_parameters');
}]
let [parameters /]: OrderedSet(SingleVariableDeclaration) = [varname /].parameters in 
[parameters /] <> null and
[m.writeSetConditions(parameters, m.params, 'SingleVariableDeclaration', m.paramsKind) /]
[/template]


