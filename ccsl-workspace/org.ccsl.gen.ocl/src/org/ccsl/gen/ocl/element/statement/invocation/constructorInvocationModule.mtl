[comment encoding = UTF-8 /]
[module constructorInvocationModule('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::commom::stringUtils /]
[import org::ccsl::gen::ocl::commom::elementUtils /]
[import org::ccsl::gen::ocl::commom::fieldWritterConditionsModule /]


[template public writeConstructorInvocationTypecheckCondition(constructorInv: ConstructorInvocation, varname: String, typecheck: Boolean, metaclass: String) ? (typecheck)]
[varname /].oclIsKindOf(InstanceCreation)
[/template]

[template public writeConstructorCondition(constructorInv: ConstructorInvocation, varname: String) ? (constructorInv.mustWriteConditionFor('constructor'))]
let [constructorInv.constructor.getFieldName() /]: ConstructorDeclaration = [varname /].method in
[constructorInv.generatesFieldCondition(constructorInv.constructor, constructorInv.constructor.getFieldName(), 'ConstructorDeclaration') /]
[/template]