[comment encoding = UTF-8 /]
[module stringConcatenationOperations('http://www.example.org/ccsl')]

[import org::ccsl::gen::ocl::element::statement::expression::operatorExpressionOperations /]
[import org::ccsl::gen::ocl::commom::elementUtils /]
[import org::ccsl::gen::ocl::commom::stringConcatenationChecker /]
[import org::ccsl::gen::ocl::commom::walkHelperModule /]



[template public writeStringConcatenationTypechecker(strConcat: StringConcatenation, varname: String, typecheck: Boolean) ? (typecheck)]
let canBeStringConcatenation: Boolean = if [varname /].oclIsKindOf(InfixExpression) then
  [varname /].oclAsType(InfixExpression).operator = InfixExpressionKind::PLUS
elseif [varname /].oclIsKindOf(Assignment) then
  [varname /].oclAsType(Assignment).operator = AssignmentKind::PLUS_ASSIGN
else
  false
endif in canBeStringConcatenation and
[strConcat.writeStringConcatenationChecker(varname) /]
[/template]


