[comment encoding = UTF-8 /]
[module javaMatchingMetaclassesModule('http://www.example.org/ccsl')]


[query public getMatchingJavaMetaclasses(element: Element): OrderedSet(String) =
  element.writeElementMatchingJavaMetaclasses().tokenize(',').trim()->asOrderedSet()
/]

[template private writeElementMatchingJavaMetaclasses(e: Element)]
ASTNode
[/template]

[comment NamedElement package /]
[template private writeElementMatchingJavaMetaclasses(e: NamedElement)]
NamedElement
[/template]

[template private writeElementMatchingJavaMetaclasses(e: Package)]
Package
[/template]

[comment Variable package /]
[template private writeElementMatchingJavaMetaclasses(e: Variable)]
SingleVariableDeclaration,VariableDeclarationFragment
[/template]

[template private writeElementMatchingJavaMetaclasses(e: ParameterVariable)]
SingleVariableDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: InitializableVariable)]
VariableDeclarationFragment
[/template]

[template private writeElementMatchingJavaMetaclasses(e: FieldVariable)]
VariableDeclarationFragment
[/template]

[template private writeElementMatchingJavaMetaclasses(e: LocalVariable)]
VariableDeclarationFragment
[/template]

[comment Method package /]
[template private writeElementMatchingJavaMetaclasses(e: SimpleMethod)]
AbstractMethodDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: Constructor)]
ConstructorDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: Method)]
MethodDeclaration
[/template]
[comment ComplexType package /]
[template private writeElementMatchingJavaMetaclasses(e: TypeDeclaration)]
AbstractTypeDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: ComplexType)]
AbstractTypeDeclaration,AnonymousClassDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: ComplexTypeDeclaration)]
AbstractTypeDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: JInterface)]
InterfaceDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: AnnotationType)]
AnnotationTypeDeclaration
[/template]

[template private writeElementMatchingJavaMetaclasses(e: AnnotationField)]
AnnotationTypeMemberDeclaration
[/template]

[comment DataType package /]
[template private writeElementMatchingJavaMetaclasses(e: DataType)]
Type
[/template]

[template private writeElementMatchingJavaMetaclasses(e: ObjectType)]
Type
[/template]

[template private writeElementMatchingJavaMetaclasses(e: ArrayType)]
ArrayType
[/template]

[template private writeElementMatchingJavaMetaclasses(e: WildCardType)]
WildCardType
[/template]

[template private writeElementMatchingJavaMetaclasses(e: ParameterizedType)]
ParameterizedType
[/template]

[template private writeElementMatchingJavaMetaclasses(e: TypeParameter)]
TypeParameter
[/template]

[template private writeElementMatchingJavaMetaclasses(e: PrimitiveType)]
PrimitiveType
[/template]

[template private writeElementMatchingJavaMetaclasses(e: BytePrimitiveType)]
PrimitiveTypeByte
[/template]

[template private writeElementMatchingJavaMetaclasses(e: BooleanPrimitiveType)]
PrimitiveTypeBoolean
[/template]

[template private writeElementMatchingJavaMetaclasses(e: CharPrimitiveType)]
PrimitiveTypeChar
[/template]

[template private writeElementMatchingJavaMetaclasses(e: DoublePrimitiveType)]
PrimitiveTypeDouble
[/template]

[template private writeElementMatchingJavaMetaclasses(e: ShortPrimitiveType)]
PrimitiveTypeShort
[/template]

[template private writeElementMatchingJavaMetaclasses(e: FloatPrimitiveType)]
PrimitiveTypeFloat
[/template]

[template private writeElementMatchingJavaMetaclasses(e: LongPrimitiveType)]
PrimitiveTypeLong
[/template]

[template private writeElementMatchingJavaMetaclasses(e: VoidType)]
PrimitiveTypeVoid
[/template]

[template private writeElementMatchingJavaMetaclasses(e: IntPrimitiveType)]
PrimitiveTypeInt
[/template]

[comment Expression package /]
[template private writeElementMatchingJavaMetaclasses(e: Expression)]
Expression
[/template]

[template private writeElementMatchingJavaMetaclasses(e: Annotation)]
Annotation
[/template]

[comment Statement package /]
[template private writeElementMatchingJavaMetaclasses(e: ImportStatement)]
ImportDeclaration
[/template]