<?xml version="1.0" encoding="UTF-8"?>
<ccsl:CompositeRule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ccsl="http://www.example.org/ccsl" xmlns:complexType="http://www.example.org/ccsl/elements/namedElements/complexType" xmlns:filters="http://www.example.org/ccsl/filters" xmlns:literalValues="http://www.example.org/ccsl/elements/statements/literalValues" xmlns:statements="http://www.example.org/ccsl/elements/statements" operator="OR">
  <rules xsi:type="ccsl:AtomicRule" subject="//@rules.0/@context/@contextElements.0/@statements.0">
    <context>
      <contextElements xsi:type="statements:Block" statementsKind="IMMEDIATE">
        <statements xsi:type="statements:MethodInvocation" elementAccessed="//@rules.0/@context/@contextElements.1/@methods.0">
          <args xsi:type="literalValues:LiteralValue"/>
        </statements>
        <statements xsi:type="statements:MethodInvocation"/>
      </contextElements>
      <contextElements xsi:type="complexType:JClass">
        <methods name="append"/>
      </contextElements>
      <filters xsi:type="filters:RegexMatch" targets="//@rules.0/@context/@contextElements.1" regex="java\\.lang\\.String(Builder|Buffer)"/>
      <filters xsi:type="filters:FromClosureFilter" targets="//@rules.0/@context/@contextElements.0/@statements.1" access="//@rules.0/@context/@contextElements.0/@statements.1" from="//@rules.0/@context/@filters.1/@context/@contextElements.0">
        <context>
          <contextElements xsi:type="statements:MethodInvocation">
            <from/>
            <args xsi:type="literalValues:LiteralValue"/>
          </contextElements>
          <filters xsi:type="filters:TemplateFilter" negated="true" targets="//@rules.0/@context/@filters.1/@context/@contextElements.0/@from" targetTemplate="//@rules.0/@context/@filters.1/@context/@filters.0/@context/@contextElements.0">
            <context>
              <contextElements xsi:type="statements:MethodInvocation" elementAccessed="//@rules.0/@context/@contextElements.1/@methods.0"/>
            </context>
          </filters>
        </context>
      </filters>
    </context>
  </rules>
  <rules xsi:type="ccsl:AtomicRule" subject="//@rules.1/@context/@contextElements.0">
    <context>
      <contextElements xsi:type="statements:MethodInvocation" elementAccessed="//@rules.1/@context/@contextElements.1/@methods.0">
        <from xsi:type="statements:MethodInvocation" elementAccessed="//@rules.1/@context/@contextElements.1/@methods.0">
          <args xsi:type="literalValues:LiteralValue"/>
        </from>
        <args xsi:type="literalValues:LiteralValue"/>
      </contextElements>
      <contextElements xsi:type="complexType:JClass">
        <methods name="append"/>
      </contextElements>
      <filters xsi:type="filters:RegexMatch" targets="//@rules.1/@context/@contextElements.1" regex="java\\.lang\\.String(Builder|Buffer)"/>
    </context>
  </rules>
</ccsl:CompositeRule>
