<?xml version="1.0" encoding="UTF-8"?>
<ccsl:AtomicRule xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ccsl="http://www.example.org/ccsl" xmlns:complexType="http://www.example.org/ccsl/elements/namedElements/complexType" xmlns:filters="http://www.example.org/ccsl/filters" xmlns:method="http://www.example.org/ccsl/elements/namedElements/method" subject="//@context/@contextElements.0/@methods.0">
  <context>
    <contextElements xsi:type="complexType:JClass">
      <methods/>
    </contextElements>
    <filters xsi:type="filters:CompositeFilter" negated="true" operator="OR">
      <filters xsi:type="filters:TemplateFilter" targets="//@context/@contextElements.0/@methods.0" targetTemplate="//@context/@filters.0/@filters.0/@context/@contextElements.0">
        <context>
          <contextElements xsi:type="method:Method" name="setUp"/>
        </context>
      </filters>
      <filters xsi:type="filters:TemplateFilter" targets="//@context/@contextElements.0/@methods.0" targetTemplate="//@context/@filters.0/@filters.1/@context/@contextElements.0">
        <context>
          <contextElements xsi:type="method:Method" name="tearDown"/>
        </context>
      </filters>
    </filters>
    <filters xsi:type="filters:RegexMatch" targets="//@context/@contextElements.0/@methods.0" regex="((?i)setup)|((?i)teardown)"/>
    <filters xsi:type="filters:CompositeFilter" operator="OR">
      <filters xsi:type="filters:TemplateFilter" targets="//@context/@contextElements.0" targetTemplate="//@context/@filters.2/@filters.0/@context/@contextElements.0">
        <context>
          <contextElements xsi:type="complexType:JClass">
            <annotations type="//@context/@filters.2/@filters.0/@context/@contextElements.1"/>
          </contextElements>
          <contextElements xsi:type="complexType:AnnotationType"/>
          <filters xsi:type="filters:RegexMatch" targets="//@context/@filters.2/@filters.0/@context/@contextElements.1" regex="(.)*(Test|Before|After|AfterClass|BeforeClass|Ignore|Runwith)"/>
        </context>
      </filters>
      <filters xsi:type="filters:TemplateFilter" targets="//@context/@contextElements.0/@methods.0" targetTemplate="//@context/@filters.2/@filters.1/@context/@contextElements.0">
        <context>
          <contextElements xsi:type="method:Method">
            <annotations type="//@context/@filters.2/@filters.1/@context/@contextElements.1"/>
          </contextElements>
          <contextElements xsi:type="complexType:AnnotationType"/>
          <filters xsi:type="filters:RegexMatch" targets="//@context/@filters.2/@filters.1/@context/@contextElements.1" regex="(.)*(Test|Before|After|AfterClass|BeforeClass|Ignore|Runwith)"/>
        </context>
      </filters>
      <filters xsi:type="filters:SuperClassClosureFilter" targets="//@context/@contextElements.0" superClass="//@context/@filters.2/@filters.2/@context/@contextElements.0" subClass="//@context/@contextElements.0">
        <context>
          <contextElements xsi:type="complexType:JClass" name="TestCase"/>
        </context>
      </filters>
    </filters>
  </context>
</ccsl:AtomicRule>
