<faultTypeRule>
  <ocl>
    SingleVariableAccess.allInstances()->select(varAccess1 |
      --Context Conditions
      let methodInv2 : OclAny = varAccess1.oclContainer() in methodInv2 &lt;&gt; null and
      methodInv2.oclIsKindOf(MethodInvocation) and
      let tmpArgs: OrderedSet(ASTNode) = methodInv2.oclAsType(MethodInvocation).arguments in
      tmpArgs->exists(varAccessTmp | varAccessTmp = varAccess1)
    )
    ->reject(node: ASTNode | node.oclContainer().oclAsType(ASTNode).originalCompilationUnit.oclIsUndefined())
    ->reject(node: ASTNode | node->closure(oclContainer())->exists(oclIsKindOf(Javadoc)))
  </ocl>
  <strategy name="All" custom="false" />
  <actions>
    <action name="ReplaceVariableAccess" custom="false" />
  </actions>
</faultTypeRule>
