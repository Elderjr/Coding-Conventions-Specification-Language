/*
 * generated by Xtext 2.18.0.M3
 */
package org.ccsl.xtext.validation;

import java.util.ArrayList;
import java.util.List;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.validation.AbstractDeclarativeValidator;

public abstract class AbstractCcslValidator extends AbstractDeclarativeValidator {
	
	@Override
	protected List<EPackage> getEPackages() {
		List<EPackage> result = new ArrayList<EPackage>();
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/elements"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/filters"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/elements/namedElements"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/elements/datatype"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/elements/statements/expressions"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/elements/statements"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/context"));
		result.add(EPackage.Registry.INSTANCE.getEPackage("http://www.example.org/ccsl/elements/statements/controlFlow"));
		return result;
	}
}
